---
import Layout from '../layouts/Layout.astro';

// Load banner data
let banner = null;
try {
  const bannerData = await fetch(new URL('/banner.json', Astro.url.origin));
  if (bannerData.ok) {
    const banners = await bannerData.json();
    if (banners && banners.length > 0) {
      const idx = Math.floor(Date.now() / 30000) % banners.length;
      banner = banners[idx];
    }
  }
} catch (e) {
  // Banner file not found or invalid, use null
}
---

<Layout title="Clyp - Modern Programming Language" banner={banner}>
  <!-- Hero Section -->
  <section class="hero">
    <div class="container">
      <div class="hero-content">
        <div class="hero-text">
          <h1 class="hero-title">
            Meet <span class="text-gradient">Clyp</span>
          </h1>
          <p class="hero-subtitle">
            A thoughtfully designed programming language that bridges the gap between 
            simplicity and power. Clean syntax meets Python's ecosystem.
          </p>
          <div class="hero-actions">
            <a href="#get-started" class="btn primary">Get Started</a>
            <a href="/examples" class="btn secondary">View Examples</a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section class="features">
    <div class="container">
      <div class="section-header">
        <h2>Why Choose Clyp?</h2>
        <p>Discover the features that make Clyp a powerful choice for modern development</p>
      </div>
      <div class="features-grid">
        <div class="feature-card">
          <div class="feature-icon">üéØ</div>
          <h3>Type Safety</h3>
          <p>Clear variable declarations with robust type checking that catches errors before they happen.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">‚ö°</div>
          <h3>Intuitive Syntax</h3>
          <p>C-like syntax that feels natural and reduces cognitive load while maintaining expressiveness.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">üêç</div>
          <h3>Python Ecosystem</h3>
          <p>Seamless access to Python's vast library ecosystem - use any Python package natively.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Installation Section -->
  <section id="get-started" class="installation">
    <div class="container">
      <div class="section-header">
        <h2>Get Started with Clyp</h2>
        <p>Install Clyp and start building amazing things today</p>
      </div>
      <div class="install-command">
        <code>pip install clyp</code>
        <button class="copy-btn" onclick="copyToClipboard('pip install clyp')">Copy</button>
      </div>
      <div class="next-steps">
        <p>Ready to explore? Check out our <a href="/examples">examples</a> or read the <a href="https://clypdocs.codesft.dev" target="_blank">documentation</a>.</p>
      </div>
    </div>
  </section>
</Layout>

<style>
.hero {
  background: var(--gradient-subtle);
  padding: var(--spacing-4xl) 0;
  border-bottom: 1px solid var(--border-subtle);
}

.hero-content {
  text-align: center;
}

.hero-title {
  font-size: 3.5rem;
  font-weight: 700;
  line-height: 1.1;
  margin-bottom: var(--spacing-lg);
}

.hero-subtitle {
  font-size: 1.2rem;
  color: var(--text-secondary);
  line-height: 1.6;
  margin-bottom: var(--spacing-2xl);
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

.hero-actions {
  display: flex;
  gap: var(--spacing-lg);
  justify-content: center;
}

.btn {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-md) var(--spacing-xl);
  border-radius: var(--radius-lg);
  text-decoration: none;
  font-weight: 600;
  transition: all 0.2s ease;
}

.btn.primary {
  background: var(--gradient-primary);
  color: white;
  border: none;
}

.btn.secondary {
  background: var(--bg-elevated);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
}

.btn:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.features {
  padding: var(--spacing-4xl) 0;
  background: var(--bg-primary);
}

.section-header {
  text-align: center;
  margin-bottom: var(--spacing-4xl);
}

.section-header h2 {
  font-size: 2.5rem;
  margin-bottom: var(--spacing-lg);
}

.section-header p {
  color: var(--text-secondary);
  font-size: 1.1rem;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--spacing-xl);
}

.feature-card {
  background: var(--bg-card);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-xl);
  padding: var(--spacing-xl);
  text-align: center;
  transition: all 0.3s ease;
}

.feature-card:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg);
  border-color: var(--primary-color);
}

.feature-icon {
  font-size: 2.5rem;
  margin-bottom: var(--spacing-lg);
}

.feature-card h3 {
  margin-bottom: var(--spacing-md);
  color: var(--text-primary);
}

.feature-card p {
  color: var(--text-secondary);
  line-height: 1.6;
}

.installation {
  padding: var(--spacing-4xl) 0;
  background: var(--bg-secondary);
}

.install-command {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-md);
  background: var(--code-bg);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
  margin: 0 auto var(--spacing-2xl);
  max-width: 300px;
}

.install-command code {
  font-family: var(--font-mono);
  color: var(--text-accent);
}

.copy-btn {
  background: var(--primary-color);
  color: white;
  border: none;
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-md);
  cursor: pointer;
  font-size: 0.9rem;
  transition: background-color 0.2s ease;
}

.copy-btn:hover {
  background: var(--primary-hover);
}

.next-steps {
  text-align: center;
}

.next-steps p {
  color: var(--text-secondary);
}

.next-steps a {
  color: var(--primary-color);
  text-decoration: none;
}

.next-steps a:hover {
  text-decoration: underline;
}

@media (max-width: 768px) {
  .hero-title {
    font-size: 2.5rem;
  }
  
  .hero-actions {
    flex-direction: column;
    gap: var(--spacing-md);
  }
  
  .install-command {
    flex-direction: column;
    gap: var(--spacing-sm);
  }
}
</style>

<script>
function copyToClipboard(text) {
  navigator.clipboard.writeText(text).then(() => {
    const btn = event?.target;
    if (btn) {
      const originalText = btn.textContent;
      btn.textContent = 'Copied!';
      setTimeout(() => {
        btn.textContent = originalText;
      }, 2000);
    }
  });
}
</script>