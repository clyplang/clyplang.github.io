---
import Layout from '../layouts/Layout.astro';
import { FeatureCard, AnimatedCounter, InteractiveButton } from '../components/InteractiveElements';
import { EXAMPLES } from '../utils/clyp-highlighter';

// Load banner data
let banner = null;
try {
  const bannerData = await fetch(new URL('/banner.json', Astro.url.origin));
  if (bannerData.ok) {
    const banners = await bannerData.json();
    if (banners && banners.length > 0) {
      // Alternate based on current time (30s interval)
      const idx = Math.floor(Date.now() / 30000) % banners.length;
      banner = banners[idx];
    }
  }
} catch (e) {
  // Banner file not found or invalid, use null
}
---

<Layout title="Clyp - Modern Programming Language" banner={banner}>
  <!-- Hero Section -->
  <section class="hero">
    <div class="container">
      <div class="hero-content">
        <div class="hero-text">
          <h1 class="hero-title">
            Meet <span class="text-gradient">Clyp</span>
          </h1>
          <p class="hero-subtitle">
            A thoughtfully designed programming language that bridges the gap between 
            simplicity and power. Clean syntax meets Python's ecosystem.
          </p>
          <div class="hero-actions">
            <InteractiveButton client:load href="#get-started" variant="primary">
              Get Started
            </InteractiveButton>
            <InteractiveButton client:load href="/examples" variant="secondary">
              View Examples
            </InteractiveButton>
          </div>
        </div>
        <div class="hero-visual">
          <div class="code-window">
            <div class="code-header">
              <div class="code-dots">
                <span class="dot red"></span>
                <span class="dot yellow"></span>
                <span class="dot green"></span>
              </div>
              <span class="code-title">hello.clyp</span>
            </div>
            <div class="code-content">
              <Fragment set:html={EXAMPLES.hello_world.highlighted_code} />
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Stats Section -->
  <section class="stats">
    <div class="container">
      <div class="stats-grid">
        <AnimatedCounter client:load target={10} label="Times Faster" suffix="x" />
        <AnimatedCounter client:load target={100} label="Python Compatible" suffix="%" />
        <AnimatedCounter client:load target={1000} label="Lines of Code Saved" suffix="+" />
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section class="features">
    <div class="container">
      <div class="section-header">
        <h2>Why Choose Clyp?</h2>
        <p>Discover the features that make Clyp a powerful choice for modern development</p>
      </div>
      <div class="features-grid">
        <FeatureCard 
          client:load
          icon="üéØ"
          title="Type Safety"
          description="Clear variable declarations with robust type checking that catches errors before they happen."
          delay={100}
        />
        <FeatureCard 
          client:load
          icon="‚ö°"
          title="Intuitive Syntax"
          description="C-like syntax that feels natural and reduces cognitive load while maintaining expressiveness."
          delay={200}
        />
        <FeatureCard 
          client:load
          icon="üêç"
          title="Python Ecosystem"
          description="Seamless access to Python's vast library ecosystem - use any Python package natively."
          delay={300}
        />
        <FeatureCard 
          client:load
          icon="üìö"
          title="Rich Standard Library"
          description="Built-in functions for common tasks like file I/O, HTTP requests, and data manipulation."
          delay={400}
        />
        <FeatureCard 
          client:load
          icon="üîÑ"
          title="Functional Programming"
          description="First-class support for functional patterns with the powerful pipeline operator."
          delay={500}
        />
        <FeatureCard 
          client:load
          icon="üöÄ"
          title="Modern Features"
          description="Classes, pattern matching, async/await, and other modern language constructs."
          delay={600}
        />
      </div>
    </div>
  </section>

  <!-- Code Preview Section -->
  <section class="code-preview">
    <div class="container">
      <div class="section-header">
        <h2>See Clyp in Action</h2>
        <p>Experience the elegance and power of Clyp's syntax</p>
      </div>
      <div class="preview-grid">
        <div class="preview-item">
          <h3>Simple & Clean</h3>
          <div class="code-window">
            <div class="code-header">
              <div class="code-dots">
                <span class="dot red"></span>
                <span class="dot yellow"></span>
                <span class="dot green"></span>
              </div>
              <span class="code-title">example.clyp</span>
            </div>
            <div class="code-content">
              <Fragment set:html={EXAMPLES.variables.highlighted_code} />
            </div>
          </div>
        </div>
        <div class="preview-item">
          <h3>Powerful Features</h3>
          <div class="code-window">
            <div class="code-header">
              <div class="code-dots">
                <span class="dot red"></span>
                <span class="dot yellow"></span>
                <span class="dot green"></span>
              </div>
              <span class="code-title">advanced.clyp</span>
            </div>
            <div class="code-content">
              <Fragment set:html={EXAMPLES.functions.highlighted_code} />
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Installation Section -->
  <section id="get-started" class="installation">
    <div class="container">
      <div class="section-header">
        <h2>Get Started with Clyp</h2>
        <p>Install Clyp and start building amazing things today</p>
      </div>
      <div class="install-options">
        <div class="install-option">
          <div class="install-header">
            <div class="install-icon">ü™ü</div>
            <h3>Windows</h3>
          </div>
          <p>Quick installation with our Windows installer</p>
          <InteractiveButton 
            client:load
            href="https://github.com/clyplang/clypinstaller/releases/latest/download/install.exe"
            variant="primary"
          >
            Download Installer
          </InteractiveButton>
        </div>
        <div class="install-option">
          <div class="install-header">
            <div class="install-icon">üêß</div>
            <h3>Linux & macOS</h3>
          </div>
          <p>Install via pip (requires Python 3.8+)</p>
          <div class="install-command">
            <code>pip install clyp</code>
            <button class="copy-btn" onclick="copyToClipboard('pip install clyp')">Copy</button>
          </div>
        </div>
      </div>
      <div class="next-steps">
        <p>Ready to explore? Check out our <a href="/examples">examples</a> or read the <a href="https://clypdocs.codesft.dev" target="_blank">documentation</a>.</p>
      </div>
    </div>
  </section>
</Layout>

<style>
.hero {
  background: var(--gradient-subtle);
  padding: var(--spacing-4xl) 0;
  border-bottom: 1px solid var(--border-subtle);
}

.hero-content {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--spacing-4xl);
  align-items: center;
}

.hero-title {
  font-size: 3.5rem;
  font-weight: 700;
  line-height: 1.1;
  margin-bottom: var(--spacing-lg);
}

.hero-subtitle {
  font-size: 1.2rem;
  color: var(--text-secondary);
  line-height: 1.6;
  margin-bottom: var(--spacing-2xl);
  max-width: 500px;
}

.hero-actions {
  display: flex;
  gap: var(--spacing-lg);
}

.hero-visual {
  position: relative;
}

.stats {
  background: var(--bg-secondary);
  padding: var(--spacing-3xl) 0;
  border-bottom: 1px solid var(--border-subtle);
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: var(--spacing-xl);
}

.features {
  padding: var(--spacing-4xl) 0;
}

.section-header {
  text-align: center;
  margin-bottom: var(--spacing-4xl);
}

.section-header h2 {
  font-size: 2.5rem;
  font-weight: 700;
  margin-bottom: var(--spacing-md);
}

.section-header p {
  font-size: 1.1rem;
  color: var(--text-secondary);
  max-width: 600px;
  margin: 0 auto;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  gap: var(--spacing-xl);
}

.code-preview {
  background: var(--bg-secondary);
  padding: var(--spacing-4xl) 0;
  border-bottom: 1px solid var(--border-subtle);
}

.preview-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  gap: var(--spacing-2xl);
}

.preview-item h3 {
  font-size: 1.3rem;
  margin-bottom: var(--spacing-lg);
  color: var(--text-primary);
}

.installation {
  padding: var(--spacing-4xl) 0;
}

.install-options {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  gap: var(--spacing-2xl);
  margin-bottom: var(--spacing-2xl);
}

.install-option {
  background: var(--bg-card);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-xl);
  padding: var(--spacing-2xl);
  text-align: center;
  transition: all 0.3s ease;
}

.install-option:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg);
  border-color: var(--primary-color);
}

.install-header {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

.install-icon {
  font-size: 2.5rem;
}

.install-command {
  background: var(--code-bg);
  border: 1px solid var(--code-border);
  border-radius: var(--radius-lg);
  padding: var(--spacing-md);
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: var(--spacing-lg) 0;
}

.install-command code {
  font-family: var(--font-mono);
  color: var(--text-accent);
  font-weight: 500;
}

.copy-btn {
  background: var(--primary-color);
  border: none;
  border-radius: var(--radius-md);
  padding: var(--spacing-xs) var(--spacing-md);
  color: white;
  font-size: 0.85rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.copy-btn:hover {
  background: var(--primary-hover);
  transform: scale(1.05);
}

.next-steps {
  text-align: center;
  color: var(--text-secondary);
}

.next-steps a {
  color: var(--primary-color);
  text-decoration: underline;
}

@media (max-width: 768px) {
  .hero-content {
    grid-template-columns: 1fr;
    gap: var(--spacing-2xl);
    text-align: center;
  }
  
  .hero-title {
    font-size: 2.5rem;
  }
  
  .stats-grid {
    grid-template-columns: 1fr;
  }
  
  .features-grid {
    grid-template-columns: 1fr;
  }
  
  .preview-grid {
    grid-template-columns: 1fr;
  }
  
  .install-options {
    grid-template-columns: 1fr;
  }
}
</style>

<script>
function copyToClipboard(text: string) {
  navigator.clipboard.writeText(text).then(() => {
    const btn = event?.target as HTMLButtonElement;
    if (btn) {
      const originalText = btn.textContent;
      btn.textContent = 'Copied!';
      setTimeout(() => {
        btn.textContent = originalText;
      }, 2000);
    }
  });
}

declare global {
  interface Window {
    copyToClipboard: (text: string) => void;
  }
}

window.copyToClipboard = copyToClipboard;
</script>