---
import Layout from '../layouts/Layout.astro';

// Load banner data
let banner = null;
try {
  const bannerData = await fetch(new URL('/banner.json', Astro.url.origin));
  if (bannerData.ok) {
    const banners = await bannerData.json();
    if (banners && banners.length > 0) {
      const idx = Math.floor(Date.now() / 30000) % banners.length;
      banner = banners[idx];
    }
  }
} catch (e) {
  // Banner file not found or invalid, use null
}
---

<Layout title="Clyp - Modern Programming Language" banner={banner}>
  <!-- Hero Section -->
  <section class="hero">
    <div class="container">
      <div class="hero-content">
        <div class="hero-text">
          <h1 class="hero-title">
            Meet <span class="text-gradient">Clyp</span>
          </h1>
          <p class="hero-subtitle">
            A thoughtfully designed programming language that bridges the gap between 
            simplicity and power. Clean syntax meets Python's ecosystem.
          </p>
          <div class="hero-actions">
            <a href="#get-started" class="btn primary">Get Started</a>
            <a href="/examples" class="btn secondary">View Examples</a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section class="features">
    <div class="container">
      <div class="section-header">
        <h2>Why Choose Clyp?</h2>
        <p>Discover the features that make Clyp a powerful choice for modern development</p>
      </div>
      <div class="features-grid">
        <div class="feature-card">
          <div class="feature-icon"><i class="fas fa-bullseye" aria-hidden="true"></i></div>
          <h3>Type Safety</h3>
          <p>Clear variable declarations with robust type checking that catches errors before they happen.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon"><i class="fas fa-bolt" aria-hidden="true"></i></div>
          <h3>Intuitive Syntax</h3>
          <p>C-like syntax that feels natural and reduces cognitive load while maintaining expressiveness.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon"><i class="fab fa-python" aria-hidden="true"></i></div>
          <h3>Python Ecosystem</h3>
          <p>Seamless access to Python's vast library ecosystem - use any Python package natively.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Installation Section -->
  <section id="get-started" class="installation">
    <div class="container">
      <div class="section-header">
        <h2>Get Started with Clyp</h2>
        <p>Install Clyp and start building amazing things today</p>
      </div>
      
      <!-- Installation Options -->
      <div class="install-options">
        <!-- Default pip install -->
        <div class="install-option primary">
          <div class="install-header">
            <div class="install-icon"><i class="fab fa-python" aria-hidden="true"></i></div>
            <div class="install-details">
              <h3>Universal Install</h3>
              <p>Works on all platforms with Python</p>
            </div>
          </div>
          <div class="install-command">
            <code>pip install clyp</code>
            <button class="copy-btn" onclick="copyToClipboard('pip install clyp')">Copy</button>
          </div>
        </div>
        
        <!-- Windows x86-64 installer -->
        <div class="install-option">
          <div class="install-header">
            <div class="install-icon"><i class="fab fa-windows" aria-hidden="true"></i></div>
            <div class="install-details">
              <h3>Windows x86-64</h3>
              <p>Native installer for Windows systems</p>
            </div>
          </div>
          <div class="install-command">
            <a href="https://github.com/clyplang/clypinstaller/releases/latest/download/install.exe" class="download-btn">
              <span>Download installer.exe</span>
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                <polyline points="7,10 12,15 17,10"/>
                <line x1="12" y1="15" x2="12" y2="3"/>
              </svg>
            </a>
          </div>
        </div>
      </div>
      
      <div class="next-steps">
        <p>Ready to explore? Check out our <a href="/examples">examples</a> or read the <a href="https://clypdocs.codesft.dev" target="_blank">documentation</a>.</p>
      </div>
    </div>
  </section>
</Layout>

<script>
function copyToClipboard(text) {
  if (typeof window !== 'undefined' && navigator.clipboard) {
    navigator.clipboard.writeText(text).then(() => {
      const btn = event?.target;
      if (btn) {
        const originalText = btn.textContent;
        btn.textContent = 'Copied!';
        setTimeout(() => {
          btn.textContent = originalText;
        }, 2000);
      }
    }).catch(() => {
      // Fallback for browsers that don't support clipboard API
      const textArea = document.createElement('textarea');
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      
      const btn = event?.target;
      if (btn) {
        const originalText = btn.textContent;
        btn.textContent = 'Copied!';
        setTimeout(() => {
          btn.textContent = originalText;
        }, 2000);
      }
    });
  }
}

// Make function available globally
if (typeof window !== 'undefined') {
  window.copyToClipboard = copyToClipboard;
}
</script>