---
import Layout from '../layouts/Layout.astro';

// Load banner data
let banner = null;
try {
  const bannerData = await fetch(new URL('/banner.json', Astro.url.origin));
  if (bannerData.ok) {
    const banners = await bannerData.json();
    if (banners && banners.length > 0) {
      const idx = Math.floor(Date.now() / 30000) % banners.length;
      banner = banners[idx];
    }
  }
} catch (e) {
  // Banner file not found or invalid, use null
}
---

<Layout title="Clyp - Modern Programming Language" banner={banner}>
  <!-- Hero Section -->
  <section class="hero">
    <div class="container">
      <div class="hero-content">
        <div class="hero-text">
          <h1 class="hero-title">
            Meet <span class="text-gradient">Clyp</span>
          </h1>
          <p class="hero-subtitle">
            A thoughtfully designed programming language that bridges the gap between 
            simplicity and power. Clean syntax meets Python's ecosystem.
          </p>
          <div class="hero-actions">
            <a href="#get-started" class="btn primary">Get Started</a>
            <a href="/examples" class="btn secondary">View Examples</a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section class="features">
    <div class="container">
      <div class="section-header">
        <h2>Why Choose Clyp?</h2>
        <p>Discover the features that make Clyp a powerful choice for modern development</p>
      </div>
      <div class="features-grid">
        <div class="feature-card">
          <div class="feature-icon">üéØ</div>
          <h3>Type Safety</h3>
          <p>Clear variable declarations with robust type checking that catches errors before they happen.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">‚ö°</div>
          <h3>Intuitive Syntax</h3>
          <p>C-like syntax that feels natural and reduces cognitive load while maintaining expressiveness.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">üêç</div>
          <h3>Python Ecosystem</h3>
          <p>Seamless access to Python's vast library ecosystem - use any Python package natively.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Installation Section -->
  <section id="get-started" class="installation">
    <div class="container">
      <div class="section-header">
        <h2>Get Started with Clyp</h2>
        <p>Install Clyp and start building amazing things today</p>
      </div>
      
      <!-- Installation Options -->
      <div class="install-options">
        <!-- Default pip install -->
        <div class="install-option primary">
          <div class="install-header">
            <div class="install-icon">üêç</div>
            <div class="install-details">
              <h3>Universal Install</h3>
              <p>Works on all platforms with Python</p>
            </div>
          </div>
          <div class="install-command">
            <code>pip install clyp</code>
            <button class="copy-btn" onclick="copyToClipboard('pip install clyp')">Copy</button>
          </div>
        </div>
        
        <!-- Windows x86-64 installer -->
        <div class="install-option">
          <div class="install-header">
            <div class="install-icon">ü™ü</div>
            <div class="install-details">
              <h3>Windows x86-64</h3>
              <p>Native installer for Windows systems</p>
            </div>
          </div>
          <div class="install-command">
            <a href="https://github.com/clyplang/clypinstaller/releases/latest/download/install.exe" class="download-btn">
              <span>Download installer.exe</span>
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
                <polyline points="7,10 12,15 17,10"/>
                <line x1="12" y1="15" x2="12" y2="3"/>
              </svg>
            </a>
          </div>
        </div>
      </div>
      
      <div class="next-steps">
        <p>Ready to explore? Check out our <a href="/examples">examples</a> or read the <a href="https://clypdocs.codesft.dev" target="_blank">documentation</a>.</p>
      </div>
    </div>
  </section>
</Layout>

<style>
.hero {
  background: var(--gradient-subtle);
  padding: var(--spacing-4xl) 0;
  border-bottom: 1px solid var(--border-subtle);
}

.hero-content {
  text-align: center;
}

.hero-title {
  font-size: 3.5rem;
  font-weight: 700;
  line-height: 1.1;
  margin-bottom: var(--spacing-lg);
}

.hero-subtitle {
  font-size: 1.2rem;
  color: var(--text-secondary);
  line-height: 1.6;
  margin-bottom: var(--spacing-2xl);
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

.hero-actions {
  display: flex;
  gap: var(--spacing-lg);
  justify-content: center;
}

.btn {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-md) var(--spacing-xl);
  border-radius: var(--radius-lg);
  text-decoration: none;
  font-weight: 600;
  transition: all 0.2s ease;
}

.btn.primary {
  background: var(--gradient-primary);
  color: white;
  border: none;
}

.btn.secondary {
  background: var(--bg-elevated);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
}

.btn:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.features {
  padding: var(--spacing-4xl) 0;
  background: var(--bg-primary);
}

.section-header {
  text-align: center;
  margin-bottom: var(--spacing-4xl);
}

.section-header h2 {
  font-size: 2.5rem;
  margin-bottom: var(--spacing-lg);
}

.section-header p {
  color: var(--text-secondary);
  font-size: 1.1rem;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--spacing-xl);
}

.feature-card {
  background: var(--bg-card);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-xl);
  padding: var(--spacing-xl);
  text-align: center;
  transition: all 0.3s ease;
}

.feature-card:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg);
  border-color: var(--primary-color);
}

.feature-icon {
  font-size: 2.5rem;
  margin-bottom: var(--spacing-lg);
}

.feature-card h3 {
  margin-bottom: var(--spacing-md);
  color: var(--text-primary);
}

.feature-card p {
  color: var(--text-secondary);
  line-height: 1.6;
}

.installation {
  padding: var(--spacing-4xl) 0;
  background: var(--bg-secondary);
}

.install-options {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
  gap: var(--spacing-xl);
  margin-bottom: var(--spacing-2xl);
}

.install-option {
  background: var(--bg-card);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-xl);
  padding: var(--spacing-xl);
  transition: all 0.3s ease;
}

.install-option.primary {
  border: 2px solid var(--primary-color);
  background: linear-gradient(135deg, rgba(124, 58, 237, 0.1) 0%, rgba(6, 182, 212, 0.05) 100%);
  box-shadow: var(--glow-primary);
}

.install-option:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg);
  border-color: var(--primary-color);
}

.install-option.primary:hover {
  box-shadow: var(--shadow-glow);
}

.install-header {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

.install-icon {
  font-size: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  background: var(--gradient-primary);
  border-radius: var(--radius-lg);
}

.install-details h3 {
  color: var(--text-primary);
  margin-bottom: var(--spacing-xs);
  font-size: 1.2rem;
  font-weight: 600;
}

.install-details p {
  color: var(--text-secondary);
  font-size: 0.9rem;
}

.install-command {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--spacing-md);
  background: var(--code-bg);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
}

.install-command code {
  font-family: var(--font-mono);
  color: var(--text-accent);
  font-size: 1rem;
  flex: 1;
  min-width: 0;
}

.copy-btn {
  background: var(--primary-color);
  color: white;
  border: none;
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-md);
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 500;
  transition: all 0.2s ease;
  white-space: nowrap;
}

.copy-btn:hover {
  background: var(--primary-hover);
  transform: scale(1.05);
}

.download-btn {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  background: var(--gradient-primary);
  color: white;
  text-decoration: none;
  padding: var(--spacing-md) var(--spacing-lg);
  border-radius: var(--radius-md);
  font-weight: 600;
  transition: all 0.2s ease;
  flex: 1;
  justify-content: center;
}

.download-btn:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.download-btn svg {
  transition: transform 0.2s ease;
}

.download-btn:hover svg {
  transform: translateY(2px);
}

.next-steps {
  text-align: center;
}

.next-steps p {
  color: var(--text-secondary);
}

.next-steps a {
  color: var(--primary-color);
  text-decoration: none;
}

.next-steps a:hover {
  text-decoration: underline;
}

@media (max-width: 768px) {
  .hero-title {
    font-size: 2.5rem;
  }
  
  .hero-actions {
    flex-direction: column;
    gap: var(--spacing-md);
  }
  
  .install-options {
    grid-template-columns: 1fr;
    gap: var(--spacing-lg);
  }
  
  .install-command {
    flex-direction: column;
    gap: var(--spacing-md);
    text-align: center;
  }
  
  .install-command code {
    text-align: center;
  }
  
  .download-btn {
    width: 100%;
  }
}
</style>

<script>
function copyToClipboard(text) {
  if (typeof window !== 'undefined' && navigator.clipboard) {
    navigator.clipboard.writeText(text).then(() => {
      const btn = event?.target;
      if (btn) {
        const originalText = btn.textContent;
        btn.textContent = 'Copied!';
        setTimeout(() => {
          btn.textContent = originalText;
        }, 2000);
      }
    }).catch(() => {
      // Fallback for browsers that don't support clipboard API
      const textArea = document.createElement('textarea');
      textArea.value = text;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      
      const btn = event?.target;
      if (btn) {
        const originalText = btn.textContent;
        btn.textContent = 'Copied!';
        setTimeout(() => {
          btn.textContent = originalText;
        }, 2000);
      }
    });
  }
}

// Make function available globally
if (typeof window !== 'undefined') {
  window.copyToClipboard = copyToClipboard;
}
</script>